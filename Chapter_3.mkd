Chapter 3
=========

# Exercise 1

Question:

Move the last line of this program to the top, so the function call appears before the definitions. Run the program and see what error message you get.

Answer:

    NameError: name 'repeat_lyrics()' is not defined
# Exercise 2

Question:

Move the function call back to the bottom and move the definition of print_lyrics after the definition of repeat_lyrics. What happens when you run this program?

Answer:

Program executes normally!

# Exercise 3

Question:

Python provides a built-in function called len that returns the length of a string, so the value of len('allen') is 5.
Write a function named right_justify that takes a string named s as a parameter and prints the string with enough leading spaces so that the last letter of the string is in column 70 of the display.

>>> right_justify('allen')
                                                                 allen

Answer:

    def rightJustify(s):
        sLen = len(s)
        spaceRequired = 70 - sLen
        spaces = ' ' * spaceRequired
        return spaces + s

# Exercise 4

Question:

A function object is a value you can assign to a variable or pass as an argument. For example, do_twice is a function that takes a function object as an argument and calls it twice:

    def do_twice(f):
        f()
        f()

Here’s an example that uses do_twice to call a function named print_spam twice.

    def print_spam():
        print 'spam'

    do_twice(print_spam)

Type this example into a script and test it.
Modify do_twice so that it takes two arguments, a function object and a value, and calls the function twice, passing the value as an argument.
Write a more general version of print_spam, called print_twice, that takes a string as a parameter and prints it twice.
Use the modified version of do_twice to call print_twice twice, passing 'spam' as an argument.
Define a new function called do_four that takes a function object and a value and calls the function four times, passing the value as a parameter. There should be only two statements in the body of this function, not four.
Solution: http://thinkpython.com/code/do_four.py.

Answer:

    # Part One
    def do_twice(f, val):
        f(val)
        f(val)

    def print_twice(printVal):
        print printVal

    val = 'spam'

    do_twice(print_twice, val)

    # Part Two
    def do_twice(f, val):
        f(val)
        f(val)

    def print_twice(printVal):
        print printVal

    def do_four(f, val):
        do_twice(f, val)
        do_twice(f, val)

    val = 'spam'

    do_four(print_twice, val)

# Exercise 5

Question:

This exercise can be done using only the statements and other features we have learned so far.
Write a function that draws a grid like the following:
+ - - - - + - - - - +
|         |         |
|         |         |
|         |         |
|         |         |
+ - - - - + - - - - +
|         |         |
|         |         |
|         |         |
|         |         |
+ - - - - + - - - - +
Hint: to print more than one value on a line, you can print a comma-separated sequence:
print '+', '-'
If the sequence ends with a comma, Python leaves the line unfinished, so the value printed next appears on the same line.
print '+',
print '-'
The output of these statements is '+ -'.
A print statement all by itself ends the current line and goes to the next line.

Write a function that draws a similar grid with four rows and four columns.
Solution: http://thinkpython.com/code/grid.py. Credit: This exercise is based on an exercise in Oualline, Practical C Programming, Third Edition, O’Reilly Media, 1997.